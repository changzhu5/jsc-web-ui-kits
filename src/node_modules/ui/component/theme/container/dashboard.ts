import BaseContainer from "ui/component/container";
import app from "ui/module/index";

export default class Dashboard extends BaseContainer
{
    public constructor(options) {
        if (! options.scope) {
            options.scope = {};
        }
        if (! options.scope.columns) {
            options.scope.columns = [
                {
                    class: "col-sm-6"
                },
                {
                    class: "col-sm-6"
                }
            ];
        }
        
        let components = {};
        options.scope.columns.forEach(function(col, index) {
            components[index] = {
                type: "mmGrid"
            };
        });
        if (! options.props) {
            options.props = {};
        }
        options.props.components = components;
        super(options);
    }
    
    public static template() {
        return `<div class="row {{class}}">
            {{#each columns}}
            <div class="{{this.class}}">
            {{#with (get @root.components @index) as |comp|}}
            <mm-component name="{{comp.name}}" type="{{comp.type}}"></mm-component>
            {{/with}}
            </div>
            {{/each}}
        </div>`;
    }

    public static properties() {
        let props = super.properties();
        props["elements"] = {
            label: "Elements[]",
            type: "mmRepeater",
            props: {
                isSingleColumn: true,
                columns: [
                    {
                        key: 'comp',
                        label: "Component",
                        primary: true,
                        component: {
                            type: "mmComponentButton"
                        }
                    },
                    {
                        key: 'option',
                        label: 'Column',
                        component: {
                            type: 'mmForm',
                            props: {
                                elements: [
                                    {
                                        comp: {
                                            name: 'column',
                                            type: 'mmNumber'
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            priority: 0
        };

        return props;
    }

    public setElements(elements) {
        const children = this.getScopeVal("children");
        if (this.isArray(children)) {
            children.forEach(function(child) {
                child.destroy();
            });
        }
        
        this.setScopeVal("children", []);
        this.setScopeVal("elements", this.copy(elements));
        for (const element of elements) {
            this.addElement(element);
        }
    }

    public addElement(config) {
        let element = config.comp;
        let children = this.getScopeVal("children");
        let option = config.option !== undefined ? config.option : {};
        if (option.column === undefined) {
            throw "column is required option for element of dashboard";
        }
        let column = option.column;
        if (! children) {
            children = [];
        }
        let c = app.create(element);
        children.push(c);
        this.setScopeVal("children", children);
        return this.find("mmGrid")[column].add(c, option);
    }
}