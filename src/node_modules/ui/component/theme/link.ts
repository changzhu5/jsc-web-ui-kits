import BaseComponent from "ui/component/component";
import app from "ui/module/index";
import * as $ from "jquery/dist/jquery.min.js";

export default class Link extends BaseComponent 
{
    public initScope(data: object = null) {
        super.initScope(data);
        const comp = this;
        this.scope.click = function(e) {
            e.stopPropagation();
            let href = comp.prop("href");
            if (href && href.charAt(0) == "#") {
                let parts = href.substr(1).split(":");
                if (parts.length == 2 && app.component(parts[0], parts[1])) {
                    e.preventDefault();
                    e.stopPropagation();
                    $('html, body').animate({
                        scrollTop: app.component(parts[1], parts[0]).element.offset().top
                    }, 800);
                }
            }
            comp.trigger("click", e);
        }
    }
    
    public static template() {
        return `
            <span class="{{class}}">
                <a href="{{href}}" target="{{echo external '_blank' '_self'}}" title="{{title}}" mm-click="this.click(event)">{{{label}}}</a>
                {{#if external}}
                <i class="fa fa-external-link-alt text-primary"></i>
                {{/if}}
            </span>
        `;
    }

    public static properties() {
        let props = super.properties();

        props["class"] = {
            label: "Class",
            type: "mmTags"
        };

        props["href"] = {
            label: "Href",
            type: "mmTextfield"
        };

        props["title"] = {
            label: "Title",
            type: "mmTextfield"
        };

        props["label"] = {
            label: "Text",
            type: "mmTextfield"
        };

        props["external"] = {
            label: 'External',
            type: "mmCheckbox",
            default: false
        };

        return props;
    }

    public static events() {
        let events = super.events();
        events['click'] = {
            label: "Click"
        };

        return events;
    }

    public setExternal(ext) {
        ext = JSON.parse(ext);
        this.setScopeVal("external", ext);
    }
}