import BaseContainer from "ui/component/container";
import * as $ from "jquery/dist/jquery.min.js";
import app from "ui/module/index";

export default class Card extends BaseContainer {
    public constructor(options) {
        if (! options.props) {
            options.props = {};
        }
        if (! options.props.components) {
            options.props.components = {};
        }
        options.props.components.description = {
            type: "mmContent"
        };
        super(options);
    }

    public initScope(data: object = null) {
        super.initScope(data);

        const comp = this;

        this.scope.click = function(e) {
            e.stopPropagation();
            comp.trigger("click");
        }
    }

    public static template() {
        return `
            {{#if vertical}}
            <div class="card {{class}}" mm-click="this.click(event)">
                {{#if components.header}}
                <mm-component name="{{components.header.name}}" type="{{components.header.type}}"></mm-component>
                {{/if}}
                {{#if image.src}}
                <img src="{{{image.src}}}" {{echo image.style (style image.style)}} class="card-img-top {{echo image.class image.class}}" alt="{{{image.alt}}}">
                {{/if}}
                <div class="{{echo body.class body.class}}" {{echo body.style (style body.style)}}>
                    {{#if title}}
                    <h5 class="card-title">{{title}}</h5>
                    {{/if}}
                    {{#if subtitle}}
                    <h6 class="card-subtitle mb-2 text-muted">{{subtitle}}</h6>
                    {{/if}}
                    {{#if components.description}}
                    <mm-component name="{{components.description.name}}" type="{{components.description.type}}"></mm-component>
                    {{/if}}
                    {{#if components.body}}
                    <mm-component name="{{components.body.name}}" type="{{components.body.type}}"></mm-component>
                    {{/if}}
                </div>
                {{#if components.footer}}
                <mm-component name="{{components.footer.name}}" type="{{components.footer.type}}"></mm-component>
                {{/if}}
            </div>
            {{else}}
            <div class="card {{class}}" mm-click="this.click(event)">
                {{#if components.header}}
                <mm-component name="{{components.header.name}}" type="{{components.header.type}}"></mm-component>
                {{/if}}
                <div class="d-flex">
                    {{#if image}}
                    <div class="d-flex flex-column align-items-center">
                        <img src="{{image.src}}" class="{{echo image.class image.class}}" alt="{{image.alt}}">
                        {{#if image.cap}}
                        <span class="{{image.cap.class}}">{{image.cap.label}}</span>
                        {{/if}}
                    </div>
                    {{/if}}
                    <div class="flex-glow-1 {{echo bodyClass bodyClass}}">
                        {{#if title}}
                        <h5 class="card-title">{{title}}</h5>
                        {{/if}}
                        {{#if subtitle}}
                        <h6 class="card-subtitle mb-2 text-muted">{{subtitle}}</h6>
                        {{/if}}
                        {{#if components.description}}
                        <mm-component name="{{components.description.name}}" type="{{components.description.type}}"></mm-component>
                        {{/if}}
                        {{#if components.body}}
                            <mm-component name="{{components.body.name}}" type="{{components.body.type}}"></mm-component>
                        {{/if}}
                    </div>
                </div>
                {{#if components.footer}}
                <mm-component name="{{components.footer.name}}" type="{{components.footer.type}}"></mm-component>
                {{/if}}
            </div>
            {{/if}}
        `;
    }

    public static properties() {
        let props = super.properties();
        props['image'] = {
            label: "Image",
            type: "mmForm",
            props: {
                elements: [
                    {
                        comp: {
                            name: "src",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Src"
                        }
                    },
                    {
                        comp: {
                            name: "alt",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Alt"
                        }
                    },
                    {
                        comp: {
                            name: "style",
                            type: "mmCodeEditor"
                        }
                    }
                ]
            }
        };
        props["bodyClass"] = {
            label: "Body Class",
            type: "mmTextfield",
        };
        props["title"] = {
            label: "Title",
            type: "mmTextfield"
        };
        props["subtitle"] = {
            label: "Subtitle",
            type: "mmTextfield"
        };
        props["description"] = {
            label: "Description",
            type: "mmTextarea",
            priority: 0
        };
        props["vertical"] = {
            label: "Vertical",
            type: "mmCheckbox",
            default: true
        };
        props["header"] = {
            label: "Header Component",
            type: "mmComponentForm",
            priority: 0
        };
        props["footer"] = {
            label: "Footer Component",
            type: "mmComponentForm",
            priority: 0
        };
        props["body"] = {
            label: "Body Component",
            type: "mmComponentForm",
            priority: 0
        };

        return props;
    }

    public static events() {
        let events = super.events();
        events["click"] = {
            label: "Click"
        };

        return events;
    }

    public setHeader(header) {
        if (this.isObject(header)) {
            const comp = app.create(header);
            this.setScopeVal("header", header);
            this.add(comp, "header");
        }
    }

    public setFooter(footer) {
        if (this.isObject(footer)) {
            const comp = app.create(footer);
            this.setScopeVal("footer", footer);
            this.add(comp, "footer");
        }
    }

    public setBody(body) {
        if (this.isObject(body)) {
            const comp = app.create(body);
            this.setScopeVal("body", body);
            this.add(comp, "body");
        }
    }

    public setDescription(desc) {
        this.setScopeVal("description", desc);
        this.get("description").prop('content', desc);
    }
}