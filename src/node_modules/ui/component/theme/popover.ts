import BaseContainer from "ui/component/container";
import app from "ui/module/index";

export default class Popover extends BaseContainer
{
    public constructor(options) {
        if (! options.props) {
            options.props = {};
        }
        options.props.components = {
            content: {
                type: "mmContent"
            }
        };
        super(options);
    }

    public initScope(data: object = null) {
        super.initScope(data);
        const comp = this;
        app.on("click", function() {
            if (comp.prop("visible")) {
                comp.prop("visible", false);
            }
        });
    }

    public static template() {
        return `
            <div class="popover bs-popover-{{positionToClass}} {{echo visible 'd-block' 'd-none'}} {{class}}" data-popper-placement="{{position}}">
                {{#if arrowClass}}
                <div class="popover-arrow {{arrowClass}}"></div>
                {{/if}}
                {{#if arrowStyle}}
                <div class="popover-arrow" style="{{arrowStyle}}"></div>
                {{/if}}
                {{#if title}}
                <div class="popover-header">{{title}}</div>
                {{/if}}
                {{#if components.content}}
                <div class="popover-body">
                    <mm-component name="{{components.content.name}}" type="{{components.content.type}}"></mm-component>
                </div>
                {{/if}}
            </div>    
        `;
    }

    public static properties() {
        let props = super.properties();

        props["position"] = {
            label: "Position",
            type: "mmTextfield",
            default: "right"
        };

        props["arrowClass"] = {
            label: "Arrow class",
            type: "mmTextfield"
        };

        props["arrowStyle"] = {
            label: "Arrow style",
            type: "mmTextfield"
        };

        props["visible"] = {
            label: "Visible",
            type: "mmCheckbox",
            default: false
        };

        props["title"] = {
            label: "Title",
            type: "mmTextfield"
        };

        props["content"] = {
            label:"Content",
            type: "mmTabs",
            props: {
                active: 'html',
                tabs: [
                    {
                        label: "HTML",
                        value: "html",
                        content: {
                            type: "mmTextarea"
                        }
                    },
                    {
                        label: "Component",
                        value: "component",
                        content: {
                            type: "mmComponentForm"
                        }
                    }
                ]
            }
        };

        return props;
    }
    
    public setPosition(pos) {
        this.setScopeVal("position", pos);
        if (pos == 'left') {
            this.setScopeVal("positionToClass", "start");
            return;
        }
        if (pos == 'right') {
            this.setScopeVal("positionToClass", "end");
            return;
        }
        this.setScopeVal("positionToClass", pos);
    }

    public setVisible(bool) {
        bool = JSON.parse(bool);
        this.setScopeVal("visible", bool);
    }

    public setContent(content) {
        this.get("content").prop("content", content);
    }

    public getContent() {
        return this.get("content").prop("content");
    }
}