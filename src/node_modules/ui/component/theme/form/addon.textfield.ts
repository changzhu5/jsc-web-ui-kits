import Textfield from "ui/component/theme/form/textfield";
import * as $ from "jquery/dist/jquery.min.js";
import app from "ui/module/index";

export default class AddonTextfield extends Textfield
{
    public constructor(options) {
        super(options);
        const comp = this;
        app.on("click", function() {
            if (comp.element) {
                comp.element.find("ul.dropdown-menu").hide();
            }
        });
    }

    public initScope() {
        super.initScope();
        const comp = this;
        this.scope.select = function(e) {
            e.preventDefault();
            let index = $(e.target).closest("a").attr('index');
            let option = this.addon.options[index];
            this.addon.label = option.label;
            this.dropdown(e);
            comp.apply();
            comp.trigger("click", option.value);
        }
        this.scope.dropdown = function(e) {
            e.preventDefault();
            e.stopPropagation();
            $(e.target).closest("div.input-group").find("ul.dropdown-menu").toggle();
        }
        
        this.scope.click = function(e) {
            e.preventDefault();
            e.stopPropagation();
            comp.trigger("click", this.addon.value);
        }
    }

    public static template() {
        return `
            <div class="{{class}}">
                <div class="input-group d-flex">
                    {{#if (equal addonPos 'left')}}
                    {{#if (and addon (isEmpty addon.type))}}
                    <label class="input-group-text">{{{addon.label}}}</label>
                    {{/if}}
                    {{#if (equal addon.type "icon")}}
                    <label class="input-group-text"><i class="fa fa-{{addon.icon}}"></i></label>
                    {{/if}}
                    {{#if (equal addon.type "button")}}
                    <button class="btn btn-outline-secondary" mm-click="this.click(event)" type="button">{{addon.label}}</button>
                    {{/if}}
                    {{#if (equal addon.type "dropdown")}}
                    <button class="btn btn-outline-secondary dropdown-toggle" mm-click="this.dropdown(event)">{{{addon.label}}} <span class="caret"></span></button>
                    <ul class="dropdown-menu top-100">
                        {{#each addon.options}}
                        <li>
                            <a class="dropdown-item" href="#" mm-click="this.select(event)" index="{{@index}}">{{#if this.icon}}<i class="fa fa-{{this.icon}}"></i>{{/if}} {{{this.label}}}</a>
                        </li>
                        {{/each}}
                    </ul>
                    {{/if}}
                    {{/if}}
                    <input class="form-control" type="{{echo password 'password' 'text'}}" mm-keyup="this.typing(event)" value="{{value}}" {{placeholder placeholder}} {{disabled disabled}} {{readonly readonly}}>
                    {{#if (equal addonPos "right")}}
                    {{#if (isEmpty addon.type)}}
                    <label class="input-group-text">{{{addon.label}}}</label>
                    {{/if}}
                    {{#if (equal addon.type "icon")}}
                    <label class="input-group-text"><i class="fa fa-{{addon.icon}}"></i></label>
                    {{/if}}
                    {{#if (equal addon.type "button")}}
                    <button class="btn btn-outline-secondary" mm-click="this.click(event)" type="button">{{{addon.label}}}</button>
                    {{/if}}
                    {{#if (equal addon.type "dropdown")}}
                    <button class="btn btn-outline-secondary dropdown-toggle" mm-click="this.dropdown(event)">{{{addon.label}}} <span class="caret"></span></button>
                    <ul class="dropdown-menu">
                        {{#each addon.options}}
                        <li>
                            <a class="dropdown-item" href="#" ng-click="this.select(event)">{{#if this.icon}}<i class="fa fa-{{this.icon}}"></i>{{/if}} {{{this.label}}}</a>
                        </li>
                        {{/each}}
                    </ul>
                    {{/if}}
                    {{/if}}
                </div>
                {{#if helpText}}
                <small class="display-block text-muted {{echo (equal textAlign "start") "float-start" "float-end"}}">{{{helpText}}}</small>
                {{/if}}
            </div>
        `;
    }

    public static properties()
    {
        let props = super.properties();

        props['addon'] = {
            label: "Addon",
            type: "mmForm",
            props: {
                elements: [
                    {
                        comp: {
                            name: "type",
                            type: "mmDropdown",
                            props: {
                                options: [
                                    {label: "Icon", value: "icon"},
                                    {label: "Button", value: "button"},
                                    {label: "Dropdown", value: "dropdown"}
                                ]
                            }
                        },
                        option: {
                            label: "Type"
                        }
                    },
                    {
                        comp: {
                            name: "label",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Label",
                        }
                    },
                    {
                        comp: {
                            name: "icon",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Icon"
                        }
                    }
                ]
            }
        };
        props['addonPos'] = {
            label: "Position",
            type: "mmDropdown",
            props: {
                options: [
                    {label: "Left", value: "left"},
                    {label: "Right", value: "right"}
                ]
            },
            default: "left"
        };

        return props;
    }

    public static events() {
        let events = super.events();
        events['click'] = {
            label: "Click event",
            params: {
                action: "string"
            } 
        };
        return events;
    }
}