import BaseFormElement from "ui/component/form.element";
import * as $ from "jquery/dist/jquery.min.js";

export default class File extends BaseFormElement
{
    public initScope() {
        const comp = this;
        super.initScope();
        this.scope.change = function(e) {
            e.stopPropagation();
            const file = $(e.target).prop("files").item(0);
            const fr = new FileReader();
            fr.onload = function (onloadEvt) {
                var base64data = onloadEvt.target.result;
                comp.setScopeVal('value', {
                    data: base64data,
                    name: file.name,
                    mime: file.type,
                    size: file.size
                });
                comp.element.find("a").removeClass("d-none");
                comp.trigger("change", "", comp.getScopeVal("value"));
            };
            fr.readAsDataURL(file);
        }

        this.scope.clear = function(e) {
            e.preventDefault();
            e.stopPropagation();
            comp.prop("value", comp.initialValue);
        }
    }

    public static template() {
        return `
            <div class="position-relative {{class}}">
                <input type="file" class="form-control" {{disabled disabled}} mm-change="this.change(event)" />
                {{#if caption}}
                <small class="{{capClass}}">{{{caption}}}</small>
                {{/if}}
                <a class="{{echo value '' 'd-none'}} position-absolute top-50 end-0 me-2 translate-middle-y text-dark" href="" mm-click="this.clear(event)">
                    <i class="fa fa-times"></i>
                </a>
            </div> 
        `;
    }

    public static properties() {
        let props = super.properties();

        props["disabled"] = {
            label: "Disabled",
            type: "mmCheckbox",
            default: false
        };
        props["caption"] = {
            label: "Caption",
            type: "mmTextfield"
        };
        props["capClass"] = {
            label: "Caption Class",
            type: "mmTags"
        };

        return props;
    }

    public static events() {
        let events = super.events();
        events['change'] = {
            label: "File change event"
        };

        return events;
    }

    public setValue(p: any) {
        if (! p) {
            this.scope.value = "";
        }
        return;
    }

    public changed(): boolean {
        return this.prop("value") ? true : false;
    }
}