import BaseFormElement from "ui/component/form.element";
import app from "ui/module/index";

let modal = null;

export default class ComponentButton extends BaseFormElement {
    public constructor(options) {
        if (! options.props) {
            options.props = {};
        }
        options.props.components = {
            button: {
                type: "mmButton",
                props: {
                    icon: "edit"
                },
                on: {
                    click: function() {
                        if (c.prop("editOnModal")) {
                            modal.get('body').get('content').prop('value', c.prop('value'));
                            modal.prop("visible", true);
                        } else {
                            c.get('button').prop('class', 'd-none');
                            c.get('form').prop('class', '');
                        }
                    }
                }
            },
            form: {
                type: "mmGrid",
                props: {
                    class: ["d-none"],
                    components: [
                        {
                            comp: {
                                type: "mmComponentForm",
                                props: {
                                    value: options.props.value ? options.props.value : ''
                                }
                            }
                        },
                        {
                            comp: {
                                type: "mmFlexLayout",
                                props: {
                                    class: "justify-content-end",
                                    components: [
                                        {
                                            comp: {
                                                type: "mmButton",
                                                props: {
                                                    class: 'me-2',
                                                    label: 'Cancel',
                                                    type: "default"
                                                },
                                                on: {
                                                    click: function() {
                                                        c.get('form').prop('class', 'd-none');
                                                        c.get('button').prop('class', '');
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            comp: {
                                                type: "mmButton",
                                                props: {
                                                    label: "Save"
                                                },
                                                on: {
                                                    click: function() {
                                                        c.prop('value', c.get('form').get(0).prop('value'));
                                                        c.get('form').prop('class', 'd-none');
                                                        c.get('button').prop('class', '');
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        };

        super(options);

        const c = this;

        if (! modal) {
            modal = app.create({
                type: "mmModal",
                props: {
                    size: "xlg",
                    label: "Edit",
                    content: {
                        type: "mmComponentForm",
                        props: {
                            value: options.props.value ? options.props.value : ""
                        }
                    }
                },
                on: {
                    click: function(action) {
                        if (action == 'ok') {
                            c.prop('value', this.get('body').get('content').prop('value'));
                        }
                    }
                }
            });
        }
    }

    public static template() {
        return `
            <div class="{{class}}">
                <mm-component name="{{components.button.name}}" type="{{components.button.type}}"></mm-component>
                <mm-component name="{{components.form.name}}" type="{{components.form.type}}"></mm-component>
            </div>
        `;
    }

    public static properties() {
        let props = super.properties();

        props['editOnModal'] = {
            label: "Edit on Modal",
            type: "mmCheckbox",
            default: false
        };

        return props;
    }

    public setValue(value) {
        this.setScopeVal('value', value);
        if (this.isObject(value) && value.type) {
            this.get('button').prop('label', value.type);
        } else {
            this.get('button').prop('label', 'mmComponent');
        }
    }
}