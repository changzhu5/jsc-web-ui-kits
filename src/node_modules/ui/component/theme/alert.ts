import BaseComponent from "ui/component/component";
import * as $ from "jquery/dist/jquery.min.js";

export default class Alert extends BaseComponent
{
    public initScope() {
        const comp = this;
        super.initScope();
        this.scope.dismiss = function(e) {
            e.stopPropagation();
            comp.prop("visible", false);
            comp.trigger("click", "dismiss");
        }
        
        this.scope.doAction = function(e) {
            e.preventDefault();
            e.stopPropagation();
            
            const action = this.actions[$(e.target).attr("data-index")];
            if (comp.isFunction(action.onClick)) {
                action.onClick.apply(comp);
            }
            comp.trigger("click", action.value);
        }
    }

    public static template() {
        return `
            <div class="{{echo asStatusBar 'position-fixed top-0 start-50 translate-middle-x w-50 z-index-8'}} {{class}}{{echo visible '' ' d-none'}}">
                <div class="mb-0 alert alert-{{alert}} fade show {{echo showCloseBtn 'alert-dismissable'}}">
                    {{#if showCloseBtn}}
                    <button type="button" class="btn-close float-end" mm-click="this.dismiss(event)"></button>
                    {{/if}}
                    {{#if label}}
                    <h5>{{{label}}}</h5>
                    {{/if}}
                    {{#if description}}
                    <p class="p-0 m-0 d-flex align-items-center">
                        {{#if icon}}
                        <i class="fa fa-{{icon}} fs-4 me-2"></i>
                        {{/if}}
                        {{{description}}}
                    </p>
                    {{/if}}
                    {{#if actions}}
                    <div class="d-flex justify-content-end mt-2">
                        {{#each actions}}
                        <a class="btn btn-{{this.type}} ms-2" href="" data-index="{{@index}}" mm-click="this.doAction(event)">
                            {{#if this.icon}}<i class="fa fa-{{this.icon}}"></i>{{/if}} {{this.label}}
                        </a>
                        {{/each}}
                    </div>
                    {{/if}}
                    <div class="clearfix"></div>
                </div>
            </div>
        `;
    }

    public static properties() {
        let props = super.properties();
        props['alert'] = {
            label: "Alert Type",
            type: "mmDropdown",
            props: {
                options: [
                    {label: "Primary", value: "primary"},
                    {label: "Secondary", value: "secondary"},
                    {label: "Info", value: "info"},
                    {label: "Success", value: "success"},
                    {label: "Warning", value: "warning"},
                    {label: "Danger", value: "danger"},
                    {label: "Light", value: "light"},
                    {label: "Dark", value: "dark"},
                    {label: "Primary Outline", value: "outline-primary"},
                    {label: "Secondary Outline", value: "outline-secondary"},
                    {label: "Info Outline", value: "outline-info"},
                    {label: "Success Outline", value: "outline-success"},
                    {label: "Warning Outline", value: "outline-warning"},
                    {label: "Danger Outline", value: "outline-danger"},
                    {label: "Light Outline", value: "outline-light"},
                    {label: "Dark Outline", value: "outline-dark"},
                    {label: "Link", value: "link"}
                ]
            },
            default: "warning"
        };
        props['label'] = {
            label: "Alert Title",
            type: "mmTextfield"
        };
        props['description'] = {
            label:"Alert Description",
            type: "mmTextarea"
        };
        props['visible'] = {
            label:"Visible",
            type: "mmCheckbox",
            default: true
        };
        props['asStatusBar'] = {
            label:"Fixed Position",
            type: "mmCheckbox",
            default: false
        };
        props['showCloseBtn'] = {
            label: "Show Close button",
            type: "mmCheckbox",
            default: true
        };
        props['actions'] = {
            label: "Actions[]",
            type: "mmRepeater",
            props: {
                columns: [
                    {
                        key: "label",
                        label: "Label",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "value",
                        label: "Value",
                        primary: true,
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "icon",
                        label: "Icon",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "type",
                        label: "Type",
                        component: {
                            type: "mmDropdown",
                            props: {
                                options: [
                                    {label: "Primary", value: "primary"},
                                    {label: "Info", value: "info"},
                                    {label: "Success", value: "success"},
                                    {label: "Warning", value: "warning"},
                                    {label: "Danger", value: "danger"}
                                ]
                            }
                        }
                    }
                ]
            }
        };

        props["icon"] = {
            label: "Icon",
            type: "mmTextfield",
            default: ""
        };

        return props;
    }

    public static events() {
        let events = super.events();
        events['click'] = {
            label: "Action click event"
        };

        return events;
    }
}