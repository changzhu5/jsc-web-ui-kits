import BaseComponent from "ui/component/component";
import app from "ui/module/index";
import * as $ from "jquery";

export default class DropdownButton extends BaseComponent {
    public initScope(data: object = null) {
        super.initScope(data);
        const comp = this;
        this.scope.click = function(e) {
            e.stopPropagation();
            e.preventDefault();
            comp.element.find("ul.dropdown-menu").toggle();
           
        }
        this.scope.select = function(e) {
            e.stopPropagation();
            e.preventDefault();
            const action = $(e.target).closest("a").attr("value");
           comp.trigger("click", action);
           comp.element.find("ul.dropdown-menu").hide();
        }
        app.on("click", function() {
            if (comp.element) {
                comp.element.find("ul.dropdown-menu").hide();
            }
        });
    }

    public static template() {
        return `
            <div class="position-relative {{class}}">
                <button class="btn btn-icon btn-{{bg}} btn-{{size}} {{disabled disabled}} {{btnClass}}" type="button" mm-click="this.click(event)">
                    <i class="fa fa-{{icon}}"></i>
                </button>
                {{#if options}}
                <ul class="dropdown-menu {{dropdownClass}}">
                    {{#each options as |action|}}
                    <li>
                        <a class="dropdown-item" href="#" value="{{action.value}}" mm-click="this.select(event, target)">
                            {{#if action.icon}}
                            <i class="fa fa-{{action.icon}}"></i>
                            {{/if}}
                            <span>{{action.label}}</span>
                        </a>
                    </li>
                    {{/each}}
                </ul>
                {{/if}}
            </div>
        `;
    }

    public static properties() {
        let props = super.properties();
        props["btnClass"] = {
            label: "Button Class",
            type: "mmTextfield"
        };
        props["dropdownClass"] = {
            label: "Dropdown Class",
            type: "mmTextfield"
        };
        props['bg'] = {
            label: "Type",
            type: "mmDropdown",
            props: {
                options: [
                    {label: "Primary", value: "primary"},
                    {label: "Secondary", value: "secondary"},
                    {label: "Info", value: "info"},
                    {label: "Success", value: "success"},
                    {label: "Warning", value: "warning"},
                    {label: "Danger", value: "danger"},
                    {label: "Light", value: "light"},
                    {label: "Dark", value: "dark"},
                    {label: "Primary Outline", value: "outline-primary"},
                    {label: "Secondary Outline", value: "outline-secondary"},
                    {label: "Info Outline", value: "outline-info"},
                    {label: "Success Outline", value: "outline-success"},
                    {label: "Warning Outline", value: "outline-warning"},
                    {label: "Danger Outline", value: "outline-danger"},
                    {label: "Light Outline", value: "outline-light"},
                    {label: "Dark Outline", value: "outline-dark"},
                    {label: "Link", value: "link"}
                ]
            },
            default: "primary"
        };
        props['icon'] = {
            label: "Icon",
            type: "mmTextfield"
        };
        props['size'] = {
            label: "Size",
            type: "mmDropdown",
            props: {
                options: [
                    {label: "Default", value: ""},
                    {label: "Large", value: "lg"},
                    {label: "Small", value: "sm"}
                ]
            },
            default: ""
        };

        props['disabled'] = {
            label: "Disabled",
            type: "mmCheckbox",
            default: false
        };
        props['options'] = {
            label: 'Options',
            type: "mmRepeater",
            props: {
                columns: [
                    {
                        key: "label",
                        label: "Label",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "value",
                        label: "Value",
                        primary: true,
                        component: {
                            type: "mmTextfield"
                        }
                    }
                ]
            }
        }

        return props;
    }
    public static events() {
        let events = super.events();
        events['click'] = {
            label: "Button click event"
        };

        return events;
    }
}