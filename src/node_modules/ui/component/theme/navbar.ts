import BaseComponent from "ui/component/component";
import * as $ from "jquery/dist/jquery.min.js";
import app from "ui/module/index";

export default class Navbar extends BaseComponent
{
    public initScope(data: object = null) {
        super.initScope(data);
        const comp = this;
        this.scope.click = function(e) {
            e.preventDefault();
            e.stopPropagation();
            const a = $(e.target).closest("a");
            const value = $(e.target).closest("a").attr("data-value");
            const link = comp.getLinkByValue(value);
            if (a.attr("href") && a.attr("href") !== '#') {
                location.href = a.attr("href");
            }
            if (a.parent().parent().hasClass("dropdown-menu")) {
                a.parent().parent().hide();
                if (comp.isFunction(link.onClick)) {
                    link.onClick.apply(comp);
                }
                comp.trigger("click", value);
                return;
            }
            if ($(e.target).closest('.nav-item').find("ul.dropdown-menu").length > 0) {
                $(e.target).closest('.nav-item').find("ul.dropdown-menu").toggle();
                return;
            } else {
                if (comp.isFunction(link.onClick)) {
                    link.onClick.apply(comp);
                }
                comp.trigger("click", value);
            }
        }
        app.on('click', function() {
            if (comp.element) {
                comp.element.find("ul.dropdown-menu").hide();
            }
        });
        this.scope.hasActiveSubMenu = function(link) {
            const active = comp.prop('active');
            if (link.menus) {
                for (const menu of link.menus) {
                    if (menu.value == active) {
                        return true;
                    }
                }
            }

            return false;
        }
    }

    public static template() {
        return `
            {{#if (not sidebar)}}
            <div class="mm-navbar navbar navbar-expand-lg p-0 navbar-{{color}} bg-{{color}} {{class}}">
                <div class="container-fluid p-0">
                    <ul class="navbar-nav float-start">
                        {{#if user}}
                        <li class="nav-item user">
                            <a class="nav-link active" href="#" data-value="{{echo user.value user.value}}" mm-click="this.click(event)">
                                {{#if user.photo}}
                                <img class="mm-navbar-avatar" src="{{user.photo}}">
                                {{/if}}
                                <span class="ps-0">{{user.label}}</span>
                                {{#if user.links}}
                                <i class="fa fa-caret-down"></i>
                                {{/if}}
                            </a>
                            {{#if user.links}}
                            <ul class="dropdown-menu position-absolute">
                                {{#each user.links as |link|}}
                                <li>
                                    <a class="dropdown-item" href="{{echo link.href link.href '#'}}" data-value="{{echo link.value link.value}}" mm-click="this.click(event)">
                                        {{#if link.icon}}
                                        <i class="fa fa-{{link.icon}}"></i>
                                        {{/if}}
                                        {{link.label}}
                                    </a>
                                </li>
                                {{/each}}
                            </ul>
                            {{/if}}
                        </li>
                        {{/if}}
                        {{#each links as |link|}}
                        {{#if (equal link.position 'left')}}
                        <li class="nav-item">
                            <a class="nav-link {{echo (equal link.value @root/active) 'active' ''}}" href="{{echo link.href link.href '#'}}" data-value="{{echo link.value link.value}}" mm-click="this.click(event)">
                                {{#if link.icon}}
                                <i class="fa fa-{{link.icon}}"></i>
                                {{/if}}
                                {{#if link.label}}
                                <span>{{link.label}}</span>
                                {{/if}}
                                {{#if link.badge}}
                                <span class="badge rounded-pill bg-danger">{{link.badge}}</span>
                                {{/if}}
                                {{#if link.menus}}
                                <b class="fa fa-caret-down"></b>
                                {{/if}}
                            </a>
                            {{#if link.menus}}
                            <ul class="dropdown-menu">
                                {{#each link.menus as |menu|}}
                                <li>
                                    <a class="dropdown-item" href="{{echo menu.href menu.href ''}}" mm-click="this.click(event)" data-value="{{echo menu.value menu.value}}">{{#if menu.icon}}<i class="fa fa-{{menu.icon}}"></i>{{/if}} {{menu.label}}</a>
                                </li>
                                {{/each}}
                            </ul>
                            {{/if}}
                        </li>
                        {{/if}}
                        {{/each}}
                    </ul>
                    <ul class="nav navbar-nav float-end">
                        {{#each links as |link|}}
                        {{#if (equal link.position 'right')}}
                        <li class="nav-item {{echo link.menus 'dropdown'}}">
                            <a class="nav-link {{echo (equal link.value @root/active) 'active'}}" href="{{echo link.href link.href '#'}}" data-value="{{echo link.value link.value}}" mm-click="this.click(event)">
                                {{#if link.icon}}
                                <i class="fa fa-{{link.icon}}"></i>
                                {{/if}}
                                {{#if link.label}}
                                <span>{{link.label}}</span>
                                {{/if}}
                                {{#if link.badge}}
                                <span class="badge rounded-pill bg-danger">{{link.badge}}</span>
                                {{/if}}
                                {{#if link.menus}}
                                <b class="fa fa-caret-down"></b>
                                {{/if}}
                            </a>
                            {{#if link.menus}}
                            <ul class="dropdown-menu">
                                {{#each link.menus as |menu|}}
                                <li>
                                    <a class="dropdown-item" href="{{echo menu.href menu.href ''}}" mm-click="this.click(event)" data-value="{{echo menu.value menu.value}}">{{#if menu.icon}}<i class="fa fa-{{menu.icon}}"></i>{{/if}} {{menu.label}}</a>
                                </li>
                                {{/each}}
                            </ul>
                            {{/if}}
                        </li>
                        {{/if}}
                        {{/each}}
                    </ul>
                </div>
            </div>
            {{else}}
            <div class="d-flex flex-column flex-shrink-0 position-fixed bg-light h-100 shadow w-sidenav z-index-1">
                {{#if user.photo}}
                <div class="nav-item border-bottom has-popover">
                    <a href="#" class="nav-link p-1" data-value="{{echo user.value user.value}}" mm-click="this.click(event)"><img class="img-fluid" src="{{user.photo}}"></a>
                    {{#if user.label}}
                    <div class="popover bs-popover-end start-100 p-2 top-50 translate-middle-y ms-2" data-popper-placement="right">
                        <div class="popover-arrow top-50 translate-middle-y text-dark"></div>
                        {{user.label}}
                    </div>
                    {{/if}}
                    {{#if user.links}}
                    <ul class="dropdown-menu top-0 start-100">
                        {{#each user.links as |link|}}
                        <li>
                            <a class="dropdown-item" href="{{echo link.href link.href '#'}}" data-value="{{echo link.value link.value}}" mm-click="this.click(event)">
                                {{#if link.icon}}
                                <i class="fa fa-{{link.icon}}"></i>
                                {{/if}}
                                {{link.label}}
                            </a>
                        </li>
                        {{/each}}
                    </ul>
                    {{/if}}
                </div>
                {{/if}}
                <ul class="nav nav-pills nav-flush flex-column mb-auto text-center">
                    {{#each links as |link|}}
                    {{#if (equal link.position 'left')}}
                    <li class="nav-item has-popover">
                        <a href="{{echo link.href link.href '#'}}" class="nav-link px-2 py-3 border-bottom rounded-0 fs-5 {{echo (or (equal link.value @root/active) (apply @root/hasActiveSubMenu @root link)) 'active'}}" mm-click="this.click(event)" data-value="{{echo link.value link.value}}">
                            <i class="fa fa-{{link.icon}}"></i>
                        </a>
                        <div class="popover bs-popover-end start-100 p-2 top-50 translate-middle-y ms-2" data-popper-placement="right">
                            <div class="popover-arrow top-50 translate-middle-y text-dark"></div>
                            {{link.label}}
                        </div>
                        {{#if link.menus}}
                        <ul class="dropdown-menu top-0 start-100">
                            {{#each link.menus as |menu|}}
                            <li>
                                <a class="dropdown-item" href="{{echo menu.href menu.href '#'}}" mm-click="this.click(event)" data-value="{{echo menu.value menu.value}}">{{#if menu.icon}}<i class="fa fa-{{menu.icon}}"></i>{{/if}} {{menu.label}}</a>
                            </li>
                            {{/each}}
                        </ul>
                        {{/if}}
                    </li>
                    {{/if}}
                    {{/each}}
                </ul>
                <div class="flex-grow-1"></div>
                <ul class="nav nav-pills nav-flush flex-column mb-auto text-center">
                    {{#each links as |link|}}
                    {{#if (equal link.position 'right')}}
                    <li class="nav-item has-popover">
                        <a href="{{echo link.href link.href '#'}}" class="nav-link px-2 py-3 border-top rounded-0 fs-5 {{echo (or (equal link.value @root/active) (apply @root/hasActiveSubMenu @root link)) 'active'}}" mm-click="this.click(event)" data-value="{{echo link.value link.value}}">
                            <i class="fa fa-{{link.icon}}"></i>
                        </a>
                        <div class="popover bs-popover-end start-100 p-2 top-50 translate-middle-y ms-2" data-popper-placement="right">
                            <div class="popover-arrow top-50 translate-middle-y text-dark"></div>
                            {{link.label}}
                        </div>
                        {{#if link.menus}}
                        <ul class="dropdown-menu bottom-0 start-100">
                            {{#each link.menus as |menu|}}
                            <li>
                                <a class="dropdown-item" href="{{echo menu.href menu.href '#'}}" mm-click="this.click(event)" data-value="{{echo menu.value menu.value}}">{{#if menu.icon}}<i class="fa fa-{{menu.icon}}"></i>{{/if}} {{menu.label}}</a>
                            </li>
                            {{/each}}
                        </ul>
                        {{/if}}
                    </li>
                    {{/if}}
                    {{/each}}
                </ul>
            </div>
            {{/if}}
        `;
    }

    public static properties() {
        let props = super.properties();
        
        props['color'] = {
            label: "Color",
            type: "mmDropdown",
            props: {
                options: [
                    {label: "Light", value: "light"},
                    {label: "Dark", value: "dark"}
                ]
            },
            default: "light"
        };

        props["sidebar"] = {
            label: "On sidebar",
            type: "mmCheckbox",
            default: false
        };

        props['active'] = {
            label: "Active",
            type: "mmTextfield",
            default: ""
        };

        props['user'] = {
            label: "User",
            type: "mmForm",
            props: {
                elements: [
                    {
                        comp: {
                            name: "label",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Label"
                        }
                    },
                    {
                        comp: {
                            name: "value",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Value"
                        }
                    },
                    {
                        comp: {
                            name: "photo",
                            type: "mmTextfield"
                        },
                        option: {
                            label: "Photo"
                        }
                    },
                    {
                        comp: {
                            name: "links",
                            type: "mmRepeater",
                            props: {
                                columns: [
                                    {
                                        key: "label",
                                        label: "Label",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    },
                                    {
                                        key: "href",
                                        label: "Href",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    },
                                    {
                                        key: "value",
                                        primary: true,
                                        label: "Value",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    },
                                    {
                                        key: "icon",
                                        label: "Icon",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    }
                                ]
                            }
                        },
                        option: {
                            label: "Menus"
                        }
                    }
                ]
            }
        };

        props['links'] = {
            label: "Links",
            type: "mmRepeater",
            priority: 2,
            props: {
                columns: [
                    {
                        key: "label",
                        label: "Label",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "value",
                        primary: true,
                        label: "Value",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "href",
                        label: "Href",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "icon",
                        label: "Icon",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "badge",
                        label: "Badge",
                        component: {
                            type: "mmTextfield"
                        }
                    },
                    {
                        key: "position",
                        label: "Position",
                        component: {
                            type: "mmDropdown",
                            props: {
                                value: "left",
                                options: [
                                    {label: "Left", value: "left"},
                                    {label: "Right", value: "right"}
                                ]
                            }
                        }
                    },
                    {
                        key: "menus",
                        label: "Menus",
                        component: {
                            type: "mmRepeater",
                            props: {
                                asSingleColumn: true,
                                columns: [
                                    {
                                        key: "label",
                                        label: "Label",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    },
                                    {
                                        key: "value",
                                        primary: true,
                                        label: "Value",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    },
                                    {
                                        key: "href",
                                        label: "Href",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    },
                                    {
                                        key: "icon",
                                        label: "Icon",
                                        component: {
                                            type: "mmTextfield"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        };
        
        return props;
    }

    public static events() {
        let events = super.events();
        events['click'] = {
            label: "A link click event"
        };

        return events;
    }

    public setLinks(links) {
        let props = this.getProperties();
        links.forEach(function(link) {
            if (link.position === undefined) {
                link.position = props['links'].props.meta.position.default;
            }
        });
        this.setScopeVal('links', links);
    }

    public getUser() {
        let user = this.getScopeVal("user");
        if (this.isObject(user)) {
            return this.copy(user);
        }

        return user;
    }

    public getLinkByValue(value: string) {
        const links = this.prop("links");
        if (! links) {
            return "";
        }
        for (const link of links) {
            if (link.value === value) {
                return link;
            }
        }
        return "";
    }

    public addLink(link) {
        let links = this.prop("links");
        if (! this.isArray(links)) {
            links = [link];
        } else {
            links.push(link);
        }

        this.prop('links', links);
    }
}